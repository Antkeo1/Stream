{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/streams/client/src/Components/GoogleAuth.js\";\nimport React from 'react';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: null // wired google api with client id and email as the scope for oauth\n\n    };\n\n    _this.onAuthChange = function () {\n      _this.setState({\n        isSignedIn: _this.auth.isSignedIn.get()\n      });\n    };\n\n    _this.onSignIn = function () {\n      _this.auth.signIn();\n    };\n\n    _this.onSignOut = function () {\n      _this.auth.signOut();\n    };\n\n    _this.renderAuthButton = function () {\n      if (_this.state.isSignedIn === null) {\n        return null;\n      } else if (_this.state.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: _this.onSignOut(),\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), \"SignOut\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: _this.onSignIn(),\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), \"Sign in with Google\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: '645899597003-o2cne0ffui7ass2meojl73a0c3dfmud8.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(function () {\n          // window.gapi.auth2.getAuthInstance()\n          // is a library that allows us to signin/signout\n          // and if the user is signed in or out\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.onAuthChange(); // event listener\n\n\n          _this2.auth.isSignedIn.listen(_this2.onAuthChange);\n        });\n      });\n    } // onChange event handler\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/client/src/Components/GoogleAuth.js"],"names":["React","GoogleAuth","state","isSignedIn","onAuthChange","setState","auth","get","onSignIn","signIn","onSignOut","signOut","renderAuthButton","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,IADN,CAGR;;AAHQ,K;;UAuBRC,Y,GAAe,YAAM;AACnB,YAAKC,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAE,MAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AADA,OAAd;AAGD,K;;UAEDC,Q,GAAW,YAAM;AACf,YAAKF,IAAL,CAAUG,MAAV;AACD,K;;UAEDC,S,GAAY,YAAM;AAChB,YAAKJ,IAAL,CAAUK,OAAV;AACD,K;;UAEDC,gB,GAAmB,YAAM;AACvB,UAAI,MAAKV,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAqC;AACnC,eAAO,IAAP;AACD,OAFD,MAEO,IAAI,MAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,eACE;AAAQ,UAAA,OAAO,EAAE,MAAKO,SAAL,EAAjB;AAAmC,UAAA,SAAS,EAAC,sBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,YADF;AAMD,OAPM,MAOA;AACL,eACE;AAAQ,UAAA,OAAO,EAAE,MAAKF,QAAL,EAAjB;AAAkC,UAAA,SAAS,EAAC,sBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,wBADF;AAMD;AACF,K;;;;;;;wCAnDmB;AAAA;;AAClBK,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACrCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,UAAAA,QAAQ,EAAC,0EADa;AAEtBC,UAAAA,KAAK,EAAE;AAFe,SAAxB,EAIGC,IAJH,CAIQ,YAAM;AACZ;AACA;AACA;AACA,UAAA,MAAI,CAACd,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAAClB,YAAL,GALY,CAMZ;;;AACA,UAAA,MAAI,CAACE,IAAL,CAAUH,UAAV,CAAqBoB,MAArB,CAA4B,MAAI,CAACnB,YAAjC;AACD,SAZD;AAaD,OAdD;AAeD,K,CAED;;;;6BAmCS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKQ,gBAAL,EAAN,CAAP;AACD;;;;EA5DsBZ,KAAK,CAACwB,S;;AA+D/B,eAAevB,UAAf","sourcesContent":["import React from 'react'\n\nclass GoogleAuth extends React.Component {\n  state = {\n    isSignedIn: null\n  }\n  // wired google api with client id and email as the scope for oauth\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId:'645899597003-o2cne0ffui7ass2meojl73a0c3dfmud8.apps.googleusercontent.com',\n        scope: 'email'\n\n      }).then(() => {\n        // window.gapi.auth2.getAuthInstance()\n        // is a library that allows us to signin/signout\n        // and if the user is signed in or out\n        this.auth = window.gapi.auth2.getAuthInstance()\n        this.onAuthChange()\n        // event listener\n        this.auth.isSignedIn.listen(this.onAuthChange)\n      })\n    })\n  }\n\n  // onChange event handler\n  onAuthChange = () => {\n    this.setState({\n      isSignedIn: this.auth.isSignedIn.get()\n    })\n  }\n\n  onSignIn = () => {\n    this.auth.signIn()\n  }\n\n  onSignOut = () => {\n    this.auth.signOut()\n  }\n\n  renderAuthButton = () => {\n    if (this.state.isSignedIn === null ) {\n      return null\n    } else if (this.state.isSignedIn) {\n      return (\n        <button onClick={this.onSignOut()} className='ui red google button'>\n          <i className='google icon'/>\n          SignOut\n        </button>\n      )\n    } else {\n      return (\n        <button onClick={this.onSignIn()} className='ui red google button'>\n          <i className='google icon'/>\n          Sign in with Google\n        </button>\n      )\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>\n  }\n}\n\nexport default GoogleAuth\n"]},"metadata":{},"sourceType":"module"}