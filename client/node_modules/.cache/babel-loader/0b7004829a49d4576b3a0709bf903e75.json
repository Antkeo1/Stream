{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/streams/client/src/Components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../Actions';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: null // wired google api with client id and email as the scope for oauth\n\n    };\n\n    _this.onAuthChange = function (isSignedIn) {\n      if (isSignedIn) {\n        _this.props.signIn();\n      } else {\n        _this.props.signOut();\n      }\n    };\n\n    _this.onClickSignIn = function () {\n      _this.auth.signIn();\n    };\n\n    _this.onClickSignOut = function () {\n      _this.auth.signOut();\n    };\n\n    _this.renderAuthButton = function () {\n      if (_this.state.isSignedIn === null) {\n        return;\n      } else if (_this.state.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: _this.onClickSignOut,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), \"SignOut\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: _this.onClickSignIn,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), \"Sign in with Google\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: '645899597003-o2cne0ffui7ass2meojl73a0c3dfmud8.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(function () {\n          // window.gapi.auth2.getAuthInstance()\n          // is a library that allows us to signin/signout\n          // and if the user is signed in or out\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.onAuthChange();\n\n          _this2.setState({\n            isSignedIn: _this2.auth.isSignedIn.get()\n          }); // event listener\n\n\n          _this2.auth.isSignedIn.listen(_this2.onAuthChange);\n        });\n      });\n    } // onChange event handler\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(null, {\n  signIn: signIn,\n  signOut: signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/client/src/Components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","state","isSignedIn","onAuthChange","props","onClickSignIn","auth","onClickSignOut","renderAuthButton","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","setState","get","listen","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAgBC,OAAhB,QAA8B,YAA9B;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,IADN,CAGR;;AAHQ,K;;UA0BRC,Y,GAAe,UAAAD,UAAU,EAAI;AAC3B,UAAGA,UAAH,EAAe;AACb,cAAKE,KAAL,CAAWN,MAAX;AACD,OAFD,MAEO;AACL,cAAKM,KAAL,CAAWL,OAAX;AACD;AACF,K;;UAGDM,a,GAAgB,YAAM;AACpB,YAAKC,IAAL,CAAUR,MAAV;AACD,K;;UAEDS,c,GAAiB,YAAM;AACrB,YAAKD,IAAL,CAAUP,OAAV;AACD,K;;UAEDS,gB,GAAmB,YAAM;AAEvB,UAAI,MAAKP,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAqC;AACnC;AACD,OAFD,MAEO,IAAI,MAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,eACE;AAAQ,UAAA,OAAO,EAAE,MAAKK,cAAtB;AAAsC,UAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,YADF;AAMD,OAPM,MAOA;AACL,eACE;AAAQ,UAAA,OAAO,EAAE,MAAKF,aAAtB;AAAqC,UAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,wBADF;AAMD;AACF,K;;;;;;;wCA1DmB;AAAA;;AAClBI,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACrCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,UAAAA,QAAQ,EAAC,0EADa;AAEtBC,UAAAA,KAAK,EAAE;AAFe,SAAxB,EAIGC,IAJH,CAIQ,YAAM;AACZ;AACA;AACA;AACA,UAAA,MAAI,CAACV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAACf,YAAL;;AACA,UAAA,MAAI,CAACgB,QAAL,CAAc;AACZjB,YAAAA,UAAU,EAAE,MAAI,CAACI,IAAL,CAAUJ,UAAV,CAAqBkB,GAArB;AADA,WAAd,EANY,CASZ;;;AACA,UAAA,MAAI,CAACd,IAAL,CAAUJ,UAAV,CAAqBmB,MAArB,CAA4B,MAAI,CAAClB,YAAjC;AACD,SAfD;AAgBD,OAjBD;AAkBD,K,CAED;;;;6BAuCS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKK,gBAAL,EAAN,CAAP;AACD;;;;EAnEsBZ,KAAK,CAAC0B,S;;AAsE/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACtB,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACK,IAAN,CAAWJ;AADlB,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAAC,IAAD,EACpB;AAACC,EAAAA,MAAM,EAANA,MAAD;AAASC,EAAAA,OAAO,EAAPA;AAAT,CADoB,CAAP,CAEbC,UAFa,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {signIn, signOut} from '../Actions'\n\nclass GoogleAuth extends React.Component {\n  state = {\n    isSignedIn: null\n  }\n  // wired google api with client id and email as the scope for oauth\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId:'645899597003-o2cne0ffui7ass2meojl73a0c3dfmud8.apps.googleusercontent.com',\n        scope: 'email'\n\n      }).then(() => {\n        // window.gapi.auth2.getAuthInstance()\n        // is a library that allows us to signin/signout\n        // and if the user is signed in or out\n        this.auth = window.gapi.auth2.getAuthInstance()\n        this.onAuthChange()\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        })\n        // event listener\n        this.auth.isSignedIn.listen(this.onAuthChange)\n      })\n    })\n  }\n\n  // onChange event handler\n  onAuthChange = isSignedIn => {\n    if(isSignedIn) {\n      this.props.signIn()\n    } else {\n      this.props.signOut()\n    }\n  }\n\n  // onclick methods\n  onClickSignIn = () => {\n    this.auth.signIn()\n  }\n\n  onClickSignOut = () => {\n    this.auth.signOut()\n  }\n\n  renderAuthButton = () => {\n\n    if (this.state.isSignedIn === null ) {\n      return\n    } else if (this.state.isSignedIn) {\n      return (\n        <button onClick={this.onClickSignOut} className='ui red google button'>\n          <i className='google icon'/>\n          SignOut\n        </button>\n      )\n    } else {\n      return (\n        <button onClick={this.onClickSignIn} className='ui red google button'>\n          <i className='google icon'/>\n          Sign in with Google\n        </button>\n      )\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(null,\n  {signIn, signOut}\n)(GoogleAuth)\n"]},"metadata":{},"sourceType":"module"}