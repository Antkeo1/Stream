{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/streams/client/src/Components/GoogleAuth.js\";\nimport React from 'react';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedin: null // wired google api with client id and email as the scope for oauth\n\n    };\n\n    _this.renderAuthButton = function () {\n      if (_this.state.isSignedin === null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"idk if we are sign in\");\n      } else if (_this.state.isSignedin) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"im signed in!!\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"I am not signed in\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: '645899597003-o2cne0ffui7ass2meojl73a0c3dfmud8.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(function () {\n          // window.gapi.auth2.getAuthInstance()\n          // is a library that allows us to signin/signout\n          // and if the user is signed in or out\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.setState({\n            isSignedin: _this2.auth.isSignedin.get()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/client/src/Components/GoogleAuth.js"],"names":["React","GoogleAuth","state","isSignedin","renderAuthButton","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,IADN,CAGR;;AAHQ,K;;UAsBRC,gB,GAAmB,YAAM;AACvB,UAAI,MAAKF,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAqC;AACnC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD,OAFD,MAEO,IAAI,MAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD,OAFM,MAEA;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;AACF,K;;;;;;;wCA1BmB;AAAA;;AAClBE,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACrCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,UAAAA,QAAQ,EAAC,0EADa;AAEtBC,UAAAA,KAAK,EAAE;AAFe,SAAxB,EAIGC,IAJH,CAIQ,YAAM;AACZ;AACA;AACA;AACA,UAAA,MAAI,CAACC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AACZb,YAAAA,UAAU,EAAE,MAAI,CAACU,IAAL,CAAUV,UAAV,CAAqBc,GAArB;AADA,WAAd;AAGD,SAZD;AAaD,OAdD;AAeD;;;6BAYQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKb,gBAAL,EAAN,CAAP;AACD;;;;EAnCsBJ,KAAK,CAACkB,S;;AAsC/B,eAAejB,UAAf","sourcesContent":["import React from 'react'\n\nclass GoogleAuth extends React.Component {\n  state = {\n    isSignedin: null\n  }\n  // wired google api with client id and email as the scope for oauth\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId:'645899597003-o2cne0ffui7ass2meojl73a0c3dfmud8.apps.googleusercontent.com',\n        scope: 'email'\n\n      }).then(() => {\n        // window.gapi.auth2.getAuthInstance()\n        // is a library that allows us to signin/signout\n        // and if the user is signed in or out\n        this.auth = window.gapi.auth2.getAuthInstance()\n        this.setState({\n          isSignedin: this.auth.isSignedin.get()\n        })\n      })\n    })\n  }\n\n  renderAuthButton = () => {\n    if (this.state.isSignedin === null ) {\n      return <div>idk if we are sign in</div>\n    } else if (this.state.isSignedin) {\n      return <div>im signed in!!</div>\n    } else {\n      return <div>I am not signed in</div>\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>\n  }\n}\n\nexport default GoogleAuth\n"]},"metadata":{},"sourceType":"module"}