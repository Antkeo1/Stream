{"ast":null,"code":"import _regeneratorRuntime from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from '../api/streams';\nimport history from '.../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n}; // post request with axios\n\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                _context.next = 3;\n                return streams.post('/streams', _objectSpread({}, formValues, {\n                  userId: userId\n                }));\n\n              case 3:\n                res = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: res.data\n                }); // to navagate back to root page\n                // after create success\n\n                history.push('/');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; // get request for list of streams\n\nexport var fetchStreams = function fetchStreams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get('/streams');\n\n              case 2:\n                res = _context2.sent;\n                dispatch({\n                  type: FETCH_STREAMS,\n                  payload: res.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStream = function fetchStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return streams.get(\"/streams/\".concat(id));\n\n              case 2:\n                res = _context3.sent;\n                dispatch({\n                  type: FETCH_STREAM,\n                  payload: res.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editStream = function editStream(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                res = streams.put(\"/streams/\".concat(id), formValues);\n                dispatch({\n                  type: EDIT_STREAM,\n                  payload: res.data\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteStream = function deleteStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return streams.delete(\"/streams/\".concat(id));\n\n              case 2:\n                dispatch({\n                  type: DELETE_STREAM,\n                  payload: id\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/src/Actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","EDIT_STREAM","DELETE_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","post","res","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"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","sourcesContent":["import streams from '../api/streams'\nimport history from '.../history'\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  EDIT_STREAM,\n  DELETE_STREAM\n} from './types'\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  }\n}\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  }\n}\n\n// post request with axios\nexport const createStream = formValues => async (dispatch, getState) => {\n    const {userId} = getState().auth\n    const res = await streams.post('/streams', {...formValues, userId})\n    dispatch({ type: CREATE_STREAM, payload: res.data})\n    // to navagate back to root page\n    // after create success\n    history.push('/')\n\n  }\n\n// get request for list of streams\nexport const fetchStreams = () => async dispatch => {\n  const res = await streams.get('/streams')\n  dispatch({ type: FETCH_STREAMS, payload: res.data })\n}\n\nexport const fetchStream = (id) => async dispatch => {\n  const res = await streams.get(`/streams/${id}` )\n  dispatch({type: FETCH_STREAM, payload: res.data})\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const res = streams.put(`/streams/${id}`, formValues)\n  dispatch({ type: EDIT_STREAM, payload: res.data})\n}\n\nexport const deleteStream = (id) => async dispatch => {\n  await streams.delete(`/streams/${id}`)\n  dispatch({type: DELETE_STREAM, payload: id })\n}\n"]},"metadata":{},"sourceType":"module"}