{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/streams/src/Components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { editStream, fetchStream } from '../../Actions';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      console.log(formValues);\n\n      _this.props.editStream(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    } // api request\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, this.props.stream.title);\n      }\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editStream: editStream,\n  fetchStream: fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/src/Components/streams/StreamEdit.js"],"names":["React","connect","editStream","fetchStream","StreamEdit","onSubmit","formValues","console","log","props","match","params","id","stream","title","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;;IAEMC,U;;;;;;;;;;;;;;;;;;UAMJC,Q,GAAW,UAACC,UAAD,EAAgB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,YAAKG,KAAL,CAAWP,UAAX,CAAsBI,UAAtB;AACD,K;;;;;;;wCARmB;AAClB,WAAKG,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD,K,CAED;;;;6BAOS;AACP,UAAG,CAAC,KAAKH,KAAL,CAAWI,MAAf,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFD,MAEO;AACP,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,KAAKJ,KAAL,CAAWI,MAAX,CAAkBC,KAAxB,CAAP;AACC;AACF;;;;EAlBsBd,KAAK,CAACe,S;;AAqB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AAACL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeX,OAAO,CAACe,eAAD,EAAkB;AACtCd,EAAAA,UAAU,EAAVA,UADsC;AAC1BC,EAAAA,WAAW,EAAXA;AAD0B,CAAlB,CAAP,CAEbC,UAFa,CAAf","sourcesContent":["import React from 'react'\nimport { connect} from 'react-redux'\nimport { editStream, fetchStream } from '../../Actions'\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id)\n  }\n\n  // api request\n  onSubmit = (formValues) => {\n    console.log(formValues)\n    this.props.editStream(formValues)\n  }\n\n\n  render() {\n    if(!this.props.stream) {\n      return <div>Loading...</div>\n    } else {\n    return <div>{this.props.stream.title}</div>\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(mapStateToProps, {\n  editStream, fetchStream}\n)(StreamEdit)\n"]},"metadata":{},"sourceType":"module"}