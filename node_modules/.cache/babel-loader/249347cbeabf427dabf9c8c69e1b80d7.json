{"ast":null,"code":"import _regeneratorRuntime from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from '../api/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, UPDATE_STREAM, DELETE_STREAM } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n}; // post request with axios\n\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post('/streams', formValues);\n\n              case 2:\n                res = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: res.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/src/Actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","UPDATE_STREAM","DELETE_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","post","res","data"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,aAA3B,EAA0CC,YAA1C,EAAwDC,aAAxD,EAAuEC,aAAvE,EAAsFC,aAAtF,QAA0G,SAA1G;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACpBf,OAAO,CAACgB,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADoB;;AAAA;AAChCG,gBAAAA,GADgC;AAEtCF,gBAAAA,QAAQ,CAAC;AAAEL,kBAAAA,IAAI,EAAEP,aAAR;AAAuBQ,kBAAAA,OAAO,EAAEM,GAAG,CAACC;AAApC,iBAAD,CAAR;;AAFsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B","sourcesContent":["import streams from '../api/streams'\nimport {SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, UPDATE_STREAM, DELETE_STREAM} from './types'\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  }\n}\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  }\n}\n\n// post request with axios\nexport const createStream = formValues => async dispatch => {\n    const res = await streams.post('/streams', formValues)\n    dispatch({ type: CREATE_STREAM, payload: res.data})\n  }\n"]},"metadata":{},"sourceType":"module"}