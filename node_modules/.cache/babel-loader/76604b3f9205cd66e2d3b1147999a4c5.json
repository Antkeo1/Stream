{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/streams/src/Components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../Actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, this.props.streams);\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // Object.values is a function that takes object as argument\n  // object gets taken and put into an array\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/src/Components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","streams","Component","mapStateToProps","state","Object","values"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,YAAX;AACD;;;6BAEQ;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKE,KAAL,CAAWC,OAAjB,CAAP;AACC;;;;EAPsBL,KAAK,CAACM,S;;AAU/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC;AACA;AACA,SAAO;AAACH,IAAAA,OAAO,EAAEI,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACH,OAApB;AAAV,GAAP;AACD,CAJD;;AAMA,eAAeJ,OAAO,CAACM,eAAD,EAAkB;AAACL,EAAAA,YAAY,EAAZA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchStreams } from '../../Actions'\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams()\n  }\n\n  render() {\n  return <div>{this.props.streams}</div>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // Object.values is a function that takes object as argument\n  // object gets taken and put into an array\n  return {streams: Object.values(state.streams)}\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList)\n"]},"metadata":{},"sourceType":"module"}