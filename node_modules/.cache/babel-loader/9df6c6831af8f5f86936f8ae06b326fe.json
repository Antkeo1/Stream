{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/streams/src/Components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { editStream, fetchStream } from '../../Actions';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    _classCallCheck(this, StreamEdit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamEdit).apply(this, arguments));\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"StreamEdit\");\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editStream: editStream,\n  fetchStream: fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/src/Components/streams/StreamEdit.js"],"names":["React","connect","editStream","fetchStream","StreamEdit","props","Component","mapStateToProps","state","ownProps","stream","streams","match","params","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;;IAEMC,U;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,WAAX;AACD;;;6BAEQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;;;EAPsBH,KAAK,CAACM,S;;AAU/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AAACC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeb,OAAO,CAACM,eAAD,EAAkB;AAAEL,EAAAA,UAAU,EAAVA,UAAF;AAAcC,EAAAA,WAAW,EAAXA;AAAd,CAAlB,CAAP,CAAqDC,UAArD,CAAf","sourcesContent":["import React from 'react'\nimport { connect} from 'react-redux'\nimport { editStream, fetchStream } from '../../Actions'\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream()\n  }\n\n  render() {\n    return <div>StreamEdit</div>\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(mapStateToProps, { editStream, fetchStream})(StreamEdit)\n"]},"metadata":{},"sourceType":"module"}