{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/streams/src/Components/streams/StreamCreate.js\";\nimport React from 'react'; // Field is react component created in redux-form\n// reduxForm is function simular to connect function\n// with it we will be able to call action creators and\n// get form data into our component\n\nimport { Field, reduxForm } from 'redux-form';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"HI\");\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"desciption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nexport default reduxForm({\n  form: 'StreamCreate'\n})(StreamCreate);","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/src/Components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","renderInput","Component","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;AACA,SAAQC,KAAR,EAAeC,SAAf,QAAgC,YAAhC;;IAEMC,Y;;;;;;;;;;;;;;;;;;UACJC,W,GAAc,YAAM;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKA,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAZwBJ,KAAK,CAACK,S;;AAgBjC,eAAeH,SAAS,CAAC;AACvBI,EAAAA,IAAI,EAAC;AADkB,CAAD,CAAT,CAEZH,YAFY,CAAf","sourcesContent":["import React from 'react'\n// Field is react component created in redux-form\n// reduxForm is function simular to connect function\n// with it we will be able to call action creators and\n// get form data into our component\nimport {Field, reduxForm } from 'redux-form'\n\nclass StreamCreate extends React.Component {\n  renderInput = () => {\n    return <div>HI</div>\n  }\n\n  render() {\n    return (\n      <form>\n        <Field name='title' component={this.renderInput} />\n        <Field name='desciption' />\n      </form>\n    )\n  }\n}\n\n\nexport default reduxForm({\n  form:'StreamCreate'\n})(StreamCreate)\n"]},"metadata":{},"sourceType":"module"}