{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/streams/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/streams/src/Components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../Actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderUserButtons = function (stream) {\n      if (stream.userId === _this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    };\n\n    _this.renderList = function () {\n      return _this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, _this.renderUserButtons(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, stream.description)));\n      });\n    };\n\n    _this.renderCreateButton = function () {\n      if (_this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Link, {\n          path: \"/streams/new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Create Stream\"));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    } // a method to show buttons for user's stream\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // Object.values is a function that takes object as argument\n  // object gets taken and put into an array\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/antkeo/Code/project/streams/src/Components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","renderUserButtons","stream","userId","props","currentUserId","renderList","streams","map","id","title","description","renderCreateButton","isSignedIn","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;;;;;;UAMJC,iB,GAAoB,UAACC,MAAD,EAAY;AAC9B,UAAIA,MAAM,CAACC,MAAP,KAAkB,MAAKC,KAAL,CAAWC,aAAjC,EAAgD;AAC9C,eACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD;AACF,K;;UAEDC,U,GAAa,YAAM;AACjB,aAAO,MAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAuB,UAAAN,MAAM,EAAI;AACtC,eACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACO,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAKR,iBAAL,CAAuBC,MAAvB,CADH,EAEE;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,MAAM,CAACQ,KADV,EAEE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGR,MAAM,CAACS,WADV,CAFF,CAHF,CADF;AAYD,OAbM,CAAP;AAcD,K;;UAGDC,kB,GAAqB,YAAM;AACzB,UAAG,MAAKR,KAAL,CAAWS,UAAd,EAA0B;AACxB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAOD;AACF,K;;;;;;;wCA5CmB;AAClB,WAAKT,KAAL,CAAWL,YAAX;AACD,K,CAED;;;;6BA0CS;AACT,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKO,UAAL,EAAjC,CAFF,CAFF;AAOC;;;;EAvDsBV,KAAK,CAACkB,S;;AA0D/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC;AACA;AACA,SAAO;AACLT,IAAAA,OAAO,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB,CADJ;AAELF,IAAAA,aAAa,EAAEW,KAAK,CAACG,IAAN,CAAWhB,MAFrB;AAGLU,IAAAA,UAAU,EAAEG,KAAK,CAACG,IAAN,CAAWN;AAHlB,GAAP;AAKD,CARD;;AAUA,eAAehB,OAAO,CAACkB,eAAD,EAAkB;AAAChB,EAAAA,YAAY,EAAZA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { fetchStreams } from '../../Actions'\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams()\n  }\n\n  // a method to show buttons for user's stream\n  renderUserButtons = (stream) => {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className='right floated content'>\n          <button className='ui button primary'>Edit</button>\n          <button className='ui button negative'>Delete</button>\n        </div>\n      )\n    }\n  }\n\n  renderList = () => {\n    return this.props.streams.map(stream => {\n      return (\n        <div className='item' key={stream.id}>\n          {this.renderUserButtons(stream)}\n          <i className='large middle aligned icon camera' />\n          <div className='content'>\n            {stream.title}\n            <div className='description'>\n              {stream.description}\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  // to show create stream button if user is signed in\n  renderCreateButton = () => {\n    if(this.props.isSignedIn) {\n      return (\n        <div>\n          <Link path='/streams/new'>\n            Create Stream\n          </Link>\n        </div>\n      )\n    }\n  }\n\n  render() {\n  return (\n\n    <div>\n      <h2>Streams</h2>\n      <div className='ui celled list'>{this.renderList()}</div>\n    </div>\n)\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // Object.values is a function that takes object as argument\n  // object gets taken and put into an array\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList)\n"]},"metadata":{},"sourceType":"module"}